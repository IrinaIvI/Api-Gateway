--------создание таблиц--------
CREATE TABLE IF NOT EXISTS "User" (
	id SERIAL PRIMARY KEY,
	login VARCHAR(100) UNIQUE NOT NULL,
	password VARCHAR(100) NOT NULL,
	verified BOOLEAN DEFAULT FALSE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Account (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES "User"(id),
    balance BIGINT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TYPE transaction_type AS ENUM ('DEBIT', 'CREDIT');

CREATE TABLE IF NOT EXISTS Transactions (
    id SERIAL PRIMARY KEY,
	account_id INTEGER REFERENCES Account(id),
    amount BIGINT NOT NULL,
    type transaction_type NOT NULL,
    balance_after BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
--------добавление записей--------
INSERT INTO "User"(login, password, verified, created_at, updated_at)
VALUES
	('johny', 'superpassword', FALSE, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
	('jesscute', 'adorablepass', TRUE, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO Account (user_id, balance, created_at, updated_at)
VALUES
    (1, 1000, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
    (2, 500, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO Transactions (account_id, amount, type, balance_after, created_at)
VALUES
    (1, 200, 'DEBIT', 800, CURRENT_TIMESTAMP),
    (1, 150, 'CREDIT', 950, CURRENT_TIMESTAMP);

--------чтение всех записей--------
SELECT * FROM "User";

SELECT * FROM Account;

SELECT * FROM Transactions;
--------чтение выборочных записей--------
SELECT "User".id, "User".login, Account.balance
FROM "User"
JOIN Account ON "User".id = Account.user_id;

SELECT * FROM Transactions
WHERE account_id = (SELECT id FROM Account WHERE user_id = (SELECT id FROM "User" WHERE login = 'johny'));

--------изменение записей--------
UPDATE Account
SET balance = balance + 500
WHERE user_id = 2;

UPDATE "User"
SET password = 'commonpassword'
WHERE verified = TRUE;

UPDATE "User"
SET updated_at = CURRENT_TIMESTAMP
WHERE created_at < CURRENT_DATE - INTERVAL '30 days';

SELECT "User".login, UserToken.token
FROM "User"
JOIN UserToken ON "User".id = UserToken.user_id;

UPDATE UserToken
SET is_valid = FALSE
WHERE user_id = (SELECT id FROM "User" WHERE login = 'johny');
--------удаление записей--------
DELETE FROM Transactions
WHERE account_id IN (SELECT id FROM Account WHERE user_id = (SELECT id FROM "User" WHERE login = 'johny'));

DELETE FROM Account
WHERE user_id = (SELECT id FROM "User" WHERE login = 'johny');
